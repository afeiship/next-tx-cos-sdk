{"version":3,"sources":["next-tx-cos-sdk.js"],"names":[],"mappingsfile":"next-tx-cos-sdk.js","sourcesContent":["(function () {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('@feizheng/next-js-core2');\n  var COS = require('cos-nodejs-sdk-v5');\n  var DEFAULT_OPTIONS = {\n    SecretId: 'COS_SECRETID',\n    SecretKey: 'COS_SECRETKEY'\n  };\n\n  var NxTxCosSdk = nx.declare('nx.TxCosSdk', {\n    methods: {\n      init: function (inOptions) {\n        this.options = nx.mix(null, DEFAULT_OPTIONS, inOptions);\n        this.cos = new COS(this.options);\n      },\n      put: function (inOptions) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          return self.cos.putBucket(inOptions, function (err, data) {\n            if (err) return reject(err);\n            resolve(data);\n          });\n        });\n      },\n      del: function (inOptions) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          return self.cos.deleteBucket(inOptions, function (err, data) {\n            if (err) return reject(err);\n            resolve(data);\n          });\n        });\n      },\n      clear: function (inOptions) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          self.objClear(inOptions).then(function () {\n            self\n              .del(inOptions)\n              .then(function (res) {\n                resolve(res);\n              })\n              .catch(function (err) {\n                reject(err);\n              });\n          });\n        });\n      },\n      get: function (inOptions) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          return self.cos.getBucket(inOptions, function (err, data) {\n            if (err) return reject(err);\n            resolve(data);\n          });\n        });\n      },\n      list: function () {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          return self.cos.getService(function (err, data) {\n            if (err) return reject(err);\n            resolve(data);\n          });\n        });\n      },\n      /**\n       * 修改 bucket 中的文件权限，public-read 等\n       * @param {*} inOptions\n       */\n      aclPut: function (inOptions) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          return self.cos.putBucketAcl(inOptions, function (err, data) {\n            if (err) return reject(err);\n            resolve(data);\n          });\n        });\n      },\n      /**\n       * 上传文件到 bucket中\n       * @param {*} inOptions\n       */\n      objUpload: function (inOptions) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          return self.cos.putObject(inOptions, function (err, data) {\n            if (err) return reject(err);\n            resolve(data);\n          });\n        });\n      },\n      /**\n       * 删除 bucket 中的文件\n       * @param {*} inOptions\n       */\n      objDelete: function (inOptions) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          return self.cos.deleteObject(inOptions, function (err, data) {\n            if (err) return reject(err);\n            resolve(data);\n          });\n        });\n      },\n      objClear: function (inOptions) {\n        var self = this;\n        return new Promise(function (resolve, reject) {\n          self.get(inOptions).then(function (res) {\n            var contents = res.Contents;\n            var objs = contents.map(function (cnt) {\n              return { Key: cnt.Key };\n            });\n            self.objDeleteMulti(objs, inOptions).then(resolve).catch(reject);\n          });\n        });\n      },\n      objDeleteMulti: function (inFiles, inOptions) {\n        if (!inFiles || !inFiles.length) return Promise.resolve();\n\n        var self = this;\n        var options = nx.mix({ Bucket: null, Region: 'ap-chengdu', Objects: inFiles }, inOptions);\n        return new Promise(function (resolve, reject) {\n          return self.cos.deleteMultipleObject(options, function (err, data) {\n            if (err) return reject(err);\n            resolve(data);\n          });\n        });\n      }\n    }\n  });\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NxTxCosSdk;\n  }\n})();\n"]}